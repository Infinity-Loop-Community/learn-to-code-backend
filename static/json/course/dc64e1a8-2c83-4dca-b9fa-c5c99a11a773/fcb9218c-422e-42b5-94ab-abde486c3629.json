{
    "id": "fcb9218c-422e-42b5-94ab-abde486c3629",
    "questions": [
        {
            "id": "b69dfb7c-f3b0-43bf-af12-3ed478024a2e",
            "text": "What is Test-Driven Development (TDD)?",
            "difficulty": "easy",
            "answers": [
                {
                    "id": "72a90582-876c-4930-a3d5-67c01a77f55f",
                    "text": "A design pattern",
                    "isCorrect": false,
                    "description": "TDD is not a design pattern; it's a methodology for writing software."
                },
                {
                    "id": "98fd56f8-fa9e-4205-8089-1c8bb9e043cf",
                    "text": "A development methodology",
                    "isCorrect": true,
                    "description": "Test-Driven Development is a software development approach in which tests are written before the code that needs to be tested."
                },
                {
                    "id": "c70da3e0-3f70-4e8d-92a0-050a1e67d04c",
                    "text": "A programming language",
                    "isCorrect": false,
                    "description": "TDD is not a programming language; it's an approach used in various languages."
                },
                {
                    "id": "264f6945-aa38-4c39-8033-7fd83b1dd44b",
                    "text": "A type of software license",
                    "isCorrect": false,
                    "description": "TDD has nothing to do with software licensing."
                }
            ],
            "rating": 0,
            "ratingCount": 0
        },
        {
            "id": "d70d4ff9-1c92-45ac-9a64-518e98a5ec9e",
            "text": "What is the first step in Test-Driven Development (TDD)?",
            "difficulty": "easy",
            "answers": [
                {
                    "id": "6f47a5c0-54d5-4a08-a735-2d4812da2431",
                    "text": "Write the code",
                    "isCorrect": false,
                    "description": "Writing the code comes after writing the test."
                },
                {
                    "id": "aa49c560-501b-437b-9d78-cd155e6ed1fd",
                    "text": "Write the test",
                    "isCorrect": true,
                    "description": "The first step in TDD is to write a failing test for the functionality you want to implement."
                },
                {
                    "id": "812f393d-0d3d-493d-ae97-924a23621d97",
                    "text": "Refactor the code",
                    "isCorrect": false,
                    "description": "Refactoring is a later step in the TDD cycle."
                },
                {
                    "id": "e9ef3e3b-9fd7-4774-92ac-1ed7a59a41bb",
                    "text": "Debug the code",
                    "isCorrect": false,
                    "description": "Debugging is not the first step in TDD."
                }
            ],
            "rating": 0,
            "ratingCount": 0
        },
        {
            "id": "5855ab32-3db9-41cb-afe0-c827e1d996ab",
            "text": "What does a 'Red-Green-Refactor' cycle refer to in Test-Driven Development (TDD)?",
            "difficulty": "easy",
            "answers": [
                {
                    "id": "b5403678-9b0d-41a2-8da2-08fb8c18d3de",
                    "text": "Color-coding your code",
                    "isCorrect": false,
                    "description": "It's not about color-coding your code."
                },
                {
                    "id": "2c9483f2-07f3-4a76-8bbd-bc4a1c85a81e",
                    "text": "The three phases of TDD",
                    "isCorrect": true,
                    "description": "'Red-Green-Refactor' refers to the three main phases of TDD: writing a failing test (Red), making it pass (Green), and then refactoring."
                },
                {
                    "id": "504dd007-4e80-4f46-9b32-42475d5d9812",
                    "text": "Types of tests to write",
                    "isCorrect": false,
                    "description": "These are not types of tests."
                },
                {
                    "id": "e3df27b4-105d-4c85-8df9-2e4f7032db3e",
                    "text": "Code review stages",
                    "isCorrect": false,
                    "description": "These are not stages of code review."
                }
            ],
            "rating": 0,
            "ratingCount": 0
        },
        {
            "id": "66fc0b16-21ff-4a91-95da-6e3f4e84c663",
            "text": "What is the primary goal of Test-Driven Development (TDD)?",
            "difficulty": "easy",
            "answers": [
                {
                    "id": "1c76d89c-3983-4b9f-883e-60b5f71f9d8e",
                    "text": "Faster development",
                    "isCorrect": false,
                    "description": "TDD may initially slow down development."
                },
                {
                    "id": "8559b35c-7a6d-43f2-bb73-80fb8e4fd97b",
                    "text": "Code quality",
                    "isCorrect": true,
                    "description": "The primary goal of TDD is to produce high-quality, maintainable code by writing tests first."
                },
                {
                    "id": "1ff6937f-e45e-482e-8f57-4d5ed0249275",
                    "text": "Learning a new language",
                    "isCorrect": false,
                    "description": "Learning a new language is not the goal of TDD."
                },
                {
                    "id": "a41aae8a-6fb0-498a-a6e4-ff0e67b49155",
                    "text": "Debugging",
                    "isCorrect": false,
                    "description": "Debugging is a benefit but not the primary goal."
                }
            ],
            "rating": 0,
            "ratingCount": 0
        },
        {
            "id": "e0794ef8-232e-4489-a80c-140e7ef74ec1",
            "text": "Which of the following is NOT a type of test in Test-Driven Development (TDD)?",
            "difficulty": "easy",
            "answers": [
                {
                    "id": "8f3e7d10-76bb-4f4a-b729-0d2de1dc70f4",
                    "text": "Unit test",
                    "isCorrect": false,
                    "description": "Unit tests are the most common type of tests in TDD."
                },
                {
                    "id": "74d2330d-7599-4030-bf22-7f60130e87ee",
                    "text": "Integration test",
                    "isCorrect": false,
                    "description": "Integration tests can also be part of a TDD approach."
                },
                {
                    "id": "ed944e88-48cc-4b51-8a38-47c5743fae38",
                    "text": "Acceptance test",
                    "isCorrect": false,
                    "description": "Acceptance tests are often used in TDD to verify that the system meets the specified requirements."
                },
                {
                    "id": "0a4db1ac-8a9f-4e6b-b206-f24e46ae8db5",
                    "text": "Spellcheck test",
                    "isCorrect": true,
                    "description": "Spellcheck tests are not a standard type of test in TDD."
                }
            ],
            "rating": 0,
            "ratingCount": 0
        },
        {
            "id": "a836d005-364c-4f7b-91f1-4ed07d9b87b1",
            "text": "What does 'refactoring' mean in the context of TDD?",
            "difficulty": "easy",
            "answers": [
                {
                    "id": "e5a69cb7-0d90-4600-9d0c-778ebca7e55e",
                    "text": "Deleting unnecessary code",
                    "isCorrect": false,
                    "description": "Deleting code could be part of refactoring, but it's not the whole picture."
                },
                {
                    "id": "6840157c-ee9b-49ec-bb0d-2b8e3e5587c7",
                    "text": "Improving code without changing its behavior",
                    "isCorrect": true,
                    "description": "Refactoring is the process of improving the code's structure and readability without changing its behavior."
                },
                {
                    "id": "4a31f447-6140-48f0-9cc3-7789dcf4571f",
                    "text": "Adding new features",
                    "isCorrect": false,
                    "description": "Adding new features is not refactoring."
                },
                {
                    "id": "b1bbf6fd-2d46-4d6e-8408-9c7573f7aaf0",
                    "text": "Changing the code's behavior",
                    "isCorrect": false,
                    "description": "Changing behavior is not the goal of refactoring."
                }
            ],
            "rating": 0,
            "ratingCount": 0
        },
        {
            "id": "d089f63a-38ed-43a4-b0dc-bbc382490c34",
            "text": "Why is it important to run all tests after refactoring?",
            "difficulty": "easy",
            "answers": [
                {
                    "id": "93b6d6cc-61cd-46ad-83c8-027dcbff1b3c",
                    "text": "To add more features",
                    "isCorrect": false,
                    "description": "Adding features is not the goal here."
                },
                {
                    "id": "9ad001b2-cf0a-47e3-b631-51d2155d9f08",
                    "text": "To ensure existing functionality is not broken",
                    "isCorrect": true,
                    "description": "Running all tests after refactoring ensures that the changes haven't broken any existing functionality."
                },
                {
                    "id": "7983baf9-37fd-4662-ba39-4c0df8df446e",
                    "text": "To debug the code",
                    "isCorrect": false,
                    "description": "Debugging is not the primary reason."
                },
                {
                    "id": "31877a8f-fd4b-4de4-a18c-d647e4d93aeb",
                    "text": "To improve performance",
                    "isCorrect": false,
                    "description": "Performance improvement is not the main objective."
                }
            ],
            "rating": 0,
            "ratingCount": 0
        },
        {
            "id": "4b9b2d20-8f79-4df6-a10b-b2d4cd1254ab",
            "text": "What is a 'test suite'?",
            "difficulty": "easy",
            "answers": [
                {
                    "id": "d62300f1-9e56-4a36-8561-b6b5a3dd0d12",
                    "text": "A single test case",
                    "isCorrect": false,
                    "description": "A single test case is not a test suite."
                },
                {
                    "id": "c7c3049e-0d4d-4cc4-a9c7-15c8f0531724",
                    "text": "A collection of test cases",
                    "isCorrect": true,
                    "description": "A test suite is a collection of test cases that are intended to test a behavior or set of behaviors of an application."
                },
                {
                    "id": "b5f3de10-8d53-4641-8ad3-3c75e86020a7",
                    "text": "A type of software license",
                    "isCorrect": false,
                    "description": "It has nothing to do with software licensing."
                },
                {
                    "id": "0871aa3e-d08b-413b-bf0f-44637a84ac95",
                    "text": "A development environment",
                    "isCorrect": false,
                    "description": "It's not a development environment."
                }
            ],
            "rating": 0,
            "ratingCount": 0
        },
        {
            "id": "eb2827a4-18fd-4dbf-95ff-b504d0cb3d59",
            "text": "What is a 'test fixture'?",
            "difficulty": "easy",
            "answers": [
                {
                    "id": "eb3ae7f5-5947-41f5-b295-4f0e0e7ad3e2",
                    "text": "A tool for debugging",
                    "isCorrect": false,
                    "description": "It's not a debugging tool."
                },
                {
                    "id": "83c24ff3-49e3-4659-b35b-cf195e9c2f04",
                    "text": "A set of preconditions for running tests",
                    "isCorrect": true,
                    "description": "A test fixture sets up the conditions needed to run a test, like initializing objects or setting variables."
                },
                {
                    "id": "f2a2900b-d2d0-4d86-a4f1-eb67c19ae9ff",
                    "text": "A type of test suite",
                    "isCorrect": false,
                    "description": "It's not a type of test suite."
                },
                {
                    "id": "cefa2c7b-f2ae-4b9e-875b-2033a0e8d663",
                    "text": "A performance metric",
                    "isCorrect": false,
                    "description": "It's not a performance metric."
                }
            ],
            "rating": 0,
            "ratingCount": 0
        },
        {
            "id": "2a04332d-c445-4ff0-9517-c10f20120f0b",
            "text": "What is 'code coverage' in testing?",
            "difficulty": "easy",
            "answers": [
                {
                    "id": "243bf30b-b1ed-4627-a24c-5d6a0e8055e5",
                    "text": "The speed of test execution",
                    "isCorrect": false,
                    "description": "It's not about speed."
                },
                {
                    "id": "a2a87cd0-ef95-45b1-844a-611d6a7a0e9b",
                    "text": "The percentage of code executed by tests",
                    "isCorrect": true,
                    "description": "Code coverage measures the percentage of your codebase that is covered by your tests."
                },
                {
                    "id": "e926efff-d04b-48cf-8059-ff8573d34247",
                    "text": "The number of bugs found",
                    "isCorrect": false,
                    "description": "It's not about the number of bugs."
                },
                {
                    "id": "080af7f3-85e2-4222-b18e-f4be22fd5c29",
                    "text": "The cost of testing",
                    "isCorrect": false,
                    "description": "It's not about the cost of testing."
                }
            ],
            "rating": 0,
            "ratingCount": 0
        },
        {
            "id": "e32ae7ae-4f71-4783-9de3-6b2bb472c721",
            "text": "What is a 'mock object' in testing?",
            "difficulty": "medium",
            "answers": [
                {
                    "id": "b5d60cb7-36ed-4f0d-831a-4f8b85c0e4f3",
                    "text": "An object that mimics real objects",
                    "isCorrect": true,
                    "description": "A mock object is used to simulate the behavior of real objects in a controlled way."
                },
                {
                    "id": "b9f126a1-1638-4950-bd18-35f98d4d0b19",
                    "text": "An object used for debugging",
                    "isCorrect": false,
                    "description": "It's not specifically used for debugging."
                },
                {
                    "id": "9e140b09-06b7-45d6-a059-f927d627cfb4",
                    "text": "An object used for performance testing",
                    "isCorrect": false,
                    "description": "It's not used for performance testing."
                },
                {
                    "id": "bce16e69-bfb2-42cb-b042-16ff28f9f2ad",
                    "text": "An object that stores test results",
                    "isCorrect": false,
                    "description": "It doesn't store test results."
                }
            ],
            "rating": 0,
            "ratingCount": 0
        },
        {
            "id": "23d85530-1f8a-41ae-8725-0c9474ff85d7",
            "text": "What is the 'Arrange-Act-Assert' pattern?",
            "difficulty": "medium",
            "answers": [
                {
                    "id": "81c99b5f-52a5-4c1c-a39d-15c0f80f2a54",
                    "text": "A design pattern",
                    "isCorrect": false,
                    "description": "It's not a design pattern."
                },
                {
                    "id": "3f87f6dc-b605-43c6-a6a2-d7771305f28f",
                    "text": "A pattern for writing test cases",
                    "isCorrect": true,
                    "description": "The 'Arrange-Act-Assert' pattern is a common way of writing test cases where you arrange the conditions, act by calling the method, and then assert to check the expected outcome."
                },
                {
                    "id": "02b4a6b1-fb9c-4dcf-9a27-31cb0e1d49e5",
                    "text": "A pattern for code refactoring",
                    "isCorrect": false,
                    "description": "It's not a pattern for refactoring."
                },
                {
                    "id": "0e7240c6-837b-48dc-8e80-d7064f936b7c",
                    "text": "A pattern for debugging",
                    "isCorrect": false,
                    "description": "It's not a pattern for debugging."
                }
            ],
            "rating": 0,
            "ratingCount": 0
        },
        {
            "id": "d32e74bf-58cf-48b4-8b29-86e575863098",
            "text": "What is 'regression testing'?",
            "difficulty": "medium",
            "answers": [
                {
                    "id": "d691c5d0-c051-4bbf-a3ff-2c6a97fe4c0d",
                    "text": "Testing new features",
                    "isCorrect": false,
                    "description": "It's not specifically for new features."
                },
                {
                    "id": "f0f6be5d-2a2d-43b2-88ad-6865a017d76d",
                    "text": "Testing after code changes to ensure existing functionality is not broken",
                    "isCorrect": true,
                    "description": "Regression testing is performed to ensure that new changes haven't adversely affected the existing functionalities."
                },
                {
                    "id": "aa4301bb-c1a4-49a5-8435-f2004e2f6702",
                    "text": "Testing the first version of a software",
                    "isCorrect": false,
                    "description": "It's not for the first version."
                },
                {
                    "id": "aee88d08-7753-42fc-b1a3-24e6317f5f96",
                    "text": "Testing for performance",
                    "isCorrect": false,
                    "description": "It's not for performance."
                }
            ],
            "rating": 0,
            "ratingCount": 0
        },
        {
            "id": "8b3f3ecb-e85e-4d0a-90c5-dcb6c52cf920",
            "text": "What is 'boundary testing'?",
            "difficulty": "medium",
            "answers": [
                {
                    "id": "c7e14222-7c44-42dc-a625-9301f14cd9ff",
                    "text": "Testing the middle values in a range",
                    "isCorrect": false,
                    "description": "It's not about middle values."
                },
                {
                    "id": "4cf03d46-81aa-4e79-8d62-5f2dcb38c83e",
                    "text": "Testing the extreme values of input ranges",
                    "isCorrect": true,
                    "description": "Boundary testing focuses on the values at the edge of an input domain to find defects."
                },
                {
                    "id": "58c3334b-ea01-4c4c-b39a-634937c7ec7a",
                    "text": "Testing with random values",
                    "isCorrect": false,
                    "description": "It's not about random values."
                },
                {
                    "id": "92ad5bdf-d487-40f5-a4e1-ba28537a89fd",
                    "text": "Testing only with valid inputs",
                    "isCorrect": false,
                    "description": "It's not only about valid inputs."
                }
            ],
            "rating": 0,
            "ratingCount": 0
        },
        {
            "id": "f366037e-0b59-4d5f-a3a1-88a8dfb29b67",
            "text": "What is 'test inversion'?",
            "difficulty": "medium",
            "answers": [
                {
                    "id": "9f99eb18-c6e7-4576-8e91-02eae7da5c92",
                    "text": "Writing tests after the code",
                    "isCorrect": false,
                    "description": "Writing tests after the code is not test inversion."
                },
                {
                    "id": "8fd9a79a-46fd-4fe0-b134-d9d30b1b34c7",
                    "text": "Writing code that tests itself",
                    "isCorrect": false,
                    "description": "Code that tests itself is not what test inversion refers to."
                },
                {
                    "id": "0dc81a14-37b2-4db3-8c32-b7dfc5a63af5",
                    "text": "Writing tests that fail intentionally",
                    "isCorrect": false,
                    "description": "Writing tests that fail intentionally is not the concept of test inversion."
                },
                {
                    "id": "4a4d8c7e-f63c-4c5c-8bc3-8b9b7a164c04",
                    "text": "Writing tests before the code",
                    "isCorrect": true,
                    "description": "Test inversion refers to the practice of writing tests before writing the code, which is a core principle of TDD."
                }
            ],
            "rating": 0,
            "ratingCount": 0
        },
        {
            "id": "7c43a1f4-20bb-4e69-8543-99c242db5d38",
            "text": "What is 'property-based testing'?",
            "difficulty": "hard",
            "answers": [
                {
                    "id": "95a58909-7a0a-40ac-bbcf-69c8a706e5f5",
                    "text": "Testing based on mathematical properties",
                    "isCorrect": true,
                    "description": "Property-based testing involves testing the properties that a function should have, rather than individual, concrete examples of input/output."
                },
                {
                    "id": "a575d33a-8a19-4992-9624-159b1c19e5d2",
                    "text": "Testing based on the type of property",
                    "isCorrect": false,
                    "description": "It's not based on the type of property."
                },
                {
                    "id": "982c8755-35f8-4b49-8ff9-5f3e2a926ef8",
                    "text": "Testing based on user roles",
                    "isCorrect": false,
                    "description": "It's not based on user roles."
                },
                {
                    "id": "1c15d99b-5d0c-4f7b-81a9-6e94e365438d",
                    "text": "Testing based on the code's properties",
                    "isCorrect": false,
                    "description": "It's not based on the code's properties."
                }
            ],
            "rating": 0,
            "ratingCount": 0
        },
        {
            "id": "74c39227-1c85-4655-b00a-9502f9d7a015",
            "text": "What is 'mutation testing'?",
            "difficulty": "hard",
            "answers": [
                {
                    "id": "de4d3773-4f4d-4777-af7d-f81e867a8993",
                    "text": "Testing the quality of your tests by introducing changes in the code",
                    "isCorrect": true,
                    "description": "Mutation testing involves modifying the code in small ways and running the test suite to see if it catches the change."
                },
                {
                    "id": "1b8a0bb1-6b50-4b8c-9718-cf6721b5b987",
                    "text": "Testing for security vulnerabilities",
                    "isCorrect": false,
                    "description": "It's not specifically for security."
                },
                {
                    "id": "c9e05eaf-2a41-4d0d-a6f5-d89090dd4c1f",
                    "text": "Testing for code performance",
                    "isCorrect": false,
                    "description": "It's not for performance."
                },
                {
                    "id": "b0cbf097-6f4b-48e4-bfd2-d69f92c68b15",
                    "text": "Testing for user experience",
                    "isCorrect": false,
                    "description": "It's not for user experience."
                }
            ],
            "rating": 0,
            "ratingCount": 0
        },
        {
            "id": "8c86f42f-d4f3-41fc-b9cb-4ac6ad1ee2e1",
            "text": "What is 'concolic testing'?",
            "difficulty": "hard",
            "answers": [
                {
                    "id": "c0595d68-5838-4693-80ad-4c979f82a40e",
                    "text": "Testing that combines symbolic and concrete execution",
                    "isCorrect": true,
                    "description": "Concolic testing is a hybrid testing technique that combines concrete and symbolic execution to find defects in software."
                },
                {
                    "id": "49b6d6f5-9a6f-4a61-b663-344c4ebe630b",
                    "text": "Testing based on user feedback",
                    "isCorrect": false,
                    "description": "It's not based on user feedback."
                },
                {
                    "id": "ee5d259d-f109-494d-80a2-6bc91fc9abbb",
                    "text": "Testing based on code comments",
                    "isCorrect": false,
                    "description": "It's not based on code comments."
                },
                {
                    "id": "d421f69f-9a43-4664-8eb8-5dfca4da8da8",
                    "text": "Testing for concurrency issues",
                    "isCorrect": false,
                    "description": "It's not specifically for concurrency issues."
                }
            ],
            "rating": 0,
            "ratingCount": 0
        },
        {
            "id": "cf3a9a3e-74fb-498d-a29e-8dc8ff47b384",
            "text": "What is 'flaky test'?",
            "difficulty": "hard",
            "answers": [
                {
                    "id": "e7877590-91ff-4e82-9ed2-4853dd97a9a2",
                    "text": "A test that sometimes passes and sometimes fails without code changes",
                    "isCorrect": true,
                    "description": "A flaky test is one that could give different results each time it's run, even if the code has not changed."
                },
                {
                    "id": "bc10c8c6-56f0-4b87-9f3b-4e30d164c743",
                    "text": "A test that always fails",
                    "isCorrect": false,
                    "description": "A test that always fails is not flaky; it's just failing."
                },
                {
                    "id": "208fc3cb-1b23-45b6-9ef9-6401fd4c2711",
                    "text": "A test that is incomplete",
                    "isCorrect": false,
                    "description": "An incomplete test is not what is meant by flaky."
                },
                {
                    "id": "5f9fbdc3-4c2d-46b5-94d8-78f0dcd31419",
                    "text": "A test that takes a long time to run",
                    "isCorrect": false,
                    "description": "A long-running test is not necessarily flaky."
                }
            ],
            "rating": 0,
            "ratingCount": 0
        },
        {
            "id": "16f5b666-c3a0-4398-9c69-e0026e5294b0",
            "text": "What is 'fuzz testing'?",
            "difficulty": "hard",
            "answers": [
                {
                    "id": "b0c98d1f-bef4-4561-8263-49d0787c3e6d",
                    "text": "Testing with random inputs",
                    "isCorrect": true,
                    "description": "Fuzz testing involves providing random or pseudo-random inputs to a program to find defects."
                },
                {
                    "id": "74fbd079-ba0b-43a5-bd91-3900c748de7b",
                    "text": "Testing for visual appearance",
                    "isCorrect": false,
                    "description": "It's not for visual appearance."
                },
                {
                    "id": "00e13451-7f4e-46dc-bf29-2f61df244cbf",
                    "text": "Testing for audio quality",
                    "isCorrect": false,
                    "description": "It's not for audio quality."
                },
                {
                    "id": "1d822f41-9a5c-4b6c-8f20-5d2854f06b45",
                    "text": "Testing with predefined inputs",
                    "isCorrect": false,
                    "description": "It's not with predefined inputs."
                }
            ],
            "rating": 0,
            "ratingCount": 0
        }
    ]
}